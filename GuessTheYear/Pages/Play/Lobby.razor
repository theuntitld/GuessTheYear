<div class="page green-bg @(Visible ? "show" : "")">
    <div class="header" >
        <a class="setting-button" href="/play" @onclick:preventDefault="true" @onclick="async () => {await SettingsOpened.InvokeAsync();}">
            <div />
            <span>@Name</span>
        </a>
        <img src="/imgs/un symbol bk.svg" style="max-width:50px;"/>
    </div>

    <div class="body @(ShowRules ? "small" : "")">

        <div class="waiting-message">
            <div class="loading-icon" />
            <h1 class="">The game has<br />not started yet</h1>
            <h6 class="">Please be patient :]</h6>
        </div>
    </div>

    <div class="popup @(ShowRules ? "open" : "")">

        <div class="close-icon" @onclick="CloseRules"></div>

        <div class="rules-button" @onclick="OpenRules">
            <div class="paper-icon"></div>
            <span>
                Maybe read the rules<br />while you wait?
            </span>
        </div>

        <div class="rules">
            <p>The rules of the game are very simple just follow these:</p>
            <ul>
                <li>You will be shown a picture your job is to guess the year it was taken in.</li>
                <li>The closer your guess is the higher your points.</li>
                <li>Get the most points the end of all rounds and be crowned the winner.</li>
            </ul>
        </div>
    </div>

</div>

<style>

    .body {
        overflow: hidden;
        min-height: 100px;
    }

    .popup {
        color: #000;
        font-size: 18px;
        position: relative;
        padding-top: 75px;
        padding-bottom: 75px;
        height: 40%;
        overflow: hidden;
        transition: height 0.6s ease;
        width: 100vw;
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .popup.open {
        background-color: #000;
        color: #CDFE00;
        height: 75%;
    }

    .close-icon {
        height: 50px;
        width: 50px;
        background-image: url(/imgs/close-icon.svg);
        background-repeat: no-repeat;
        background-size: 24px 24px;
        background-position: center center;
        display: inline-block;
        position: absolute;
        right: 22px;
        top: 22px;
    }

    .rules-button {
        display: flex;
        flex-direction: column;
        text-align: center;
        align-items: center;
        gap: 10px;
    }

    .paper-icon {
        height: 24px;
        width: 24px;
        background-image: url(/imgs/paper-icon.svg);
        background-repeat: no-repeat;
        background-size: contain;
        display: inline-block;
        transition: all 0.6s ease;
        transition-property: height, width;
    }

    .open .paper-icon {
        background-image: url(/imgs/paper-light-icon.svg);
        height: 31px;
        width: 31px;
    }

    .open .rules-button span {
        display: none;
    }

    .rules {
        margin-top: 30px;
        padding: 0 50px;
        opacity: 0;
        visibility: hidden;
    }

    .open .rules {
        opacity: 1;
        visibility: visible;
    }

    .rules p {
        margin-bottom: 24px;
    }

    .rules ul {
        margin-bottom: 0;
    }

    .rules li {
        margin-bottom: 18px;
    }

    @@media (max-height: 740px) {
        .popup {
            padding-top: 40px;
            font-size: 16px;
        }
    }

</style>

@code {
    [Parameter]
    public bool Visible { get; set; }

    [Parameter]
    public string Name { get; set; } = default!;

    [Parameter]
    public EventCallback<string> SettingsOpened { get; set; }

    private bool ShowRules = true;

    private void CloseRules()
    {
        ShowRules = false;
    }

    private void OpenRules()
    {
        ShowRules = true;
    }
}