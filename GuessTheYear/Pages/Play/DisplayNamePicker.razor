<div class="page black-bg @(Visible ? "show" : "")">
    <div class="header">
        <img src="/imgs/untitld logo green.svg" style="max-width:150px;" />
    </div>

    <div class="body">
        <div>
            <h1 class="greet" style="color:white; text-align:center;">Welcome to untitld game</h1>
        </div>

        <div class="display-name-chooser">
            <label for="name-input">Choose your display name</label>
            <input id="name-input" placeholder="Ahmed" @bind-value="Name" @bind-value:event="oninput" class="display-name-input" type="text" maxlength="30" minlength="@MinNameLength" />

            <div class="sub-text @(Name != null && Name.Length >= MinNameLength ? "visible" : "")">What a great name</div>
        </div>

        <div style="justify-content:center; display:flex;">
            <button class="save-button @(Name?.Length >= MinNameLength ? "" : "disabled")" @onclick="SubmitName">Submit</button>
        </div>
    </div>

    <div class="footer">
        <span style="color:grey;">#18402nddf</span>
    </div>
</div>

<style>

    .greet {
        font-size: 36px;
    }

    .save-button {
        font-size: 18px;
        font-weight: bold;
        text-transform: uppercase;
        padding: 13px 25px;
        border: none;
        outline: none;
        transition: background-color 0.4s ease;
        background-color: #CDFE00;
    }

        .save-button.disabled {
            background-color: #A8A8A8;
        }

    .display-name-input {
        border: none;
        outline: none;
        background: none;
        width: 100%;
        color: #CDFE00;
        border-bottom: 1px solid #CDFE00;
        font-size: 18px;
    }

    .display-name-chooser label {
        font-size: 18px;
        color: #fff;
        margin-bottom: 22px;
    }

    .display-name-chooser #name-input {
        padding: 8px 0;
        text-transform: capitalize;
    }

    .display-name-chooser .sub-text {
        color: #A8A8A8;
        margin-top: 10px;
        font-size: 14px;
        opacity: 0;
        visibility: hidden;
    }

    .display-name-chooser .sub-text.visible {
        transition: opacity 1.5s ease;
        visibility: visible;
        opacity: 1;
    }

</style>

@code {
    [Parameter]
    public bool Visible { get; set; }

    [Parameter]
    public EventCallback<string> NameSaved { get; set; }

    private string? Name = null;

    private int? NameLength = null;

    private int MinNameLength = 3;


    private void OnValueChange(ChangeEventArgs e)
    {
        Console.WriteLine(e.Value);
    }

    private async Task SubmitName()
    {
        if (Name?.Length >= MinNameLength)
        {
            await this.NameSaved.InvokeAsync(this.Name);
        }
    }
}